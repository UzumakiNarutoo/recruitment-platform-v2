# This "input" configures a global authorization rule to enable public access to
# all models in this schema. Learn more about authorization rules here: https://docs.amplify.aws/cli/graphql/authorization-rules
input AMPLIFY { globalAuthRule: AuthRule = { allow: public } } # FOR TESTING ONLY!

type Post
  @model
  @auth(
    rules: [
      { allow: owner, ownerField:"recruiter", provider: userPools, operations:[create, update, read, delete] }
      { allow: private, provider: userPools, operations:[read]}
      { allow: groups, groups: ["Admins"], operations: [create, update, read, delete] }
    ]
  )
  {
      # type = 'post'
    type: String! @index(name: "SortByTimestamp", sortKeyFields: ["timestamp"], queryField: "listPostsSortedByTimestamp")
    id: ID @index(name: "GetSpecificPost", sortKeyFields: ["timestamp"], queryField: "GetSpecificPostById")
    recruiter: String @index(name: "BySpecificOwner", sortKeyFields: ["timestamp"], queryField: "listPostsBySpecificOwner")
    content: String!
    timestamp: Int!
    applications: [Application] @hasMany
  }

type Application
  @model
  @auth(
    rules: [
      { allow: owner, ownerField:"candidate", provider: userPools, operations:[create, read] }
      { allow: private, provider: userPools, operations:[read]}
    ]
  )
  {
      # type = 'application'
    type: String!
    id: ID
    candidate: String @index(name: "BySpecificCandidate", sortKeyFields: ["timestamp"], queryField: "listApplicationsBySpecificCandidate")
    resume: String
    timestamp: Int!
    post: Post @belongsTo
    postApplicationsId: ID @index(name: "BySpecificPost", sortKeyFields: ["timestamp"], queryField: "listApplicationsBySpecificPost")
  }
